# FUNCTION splits the regions in smaller batches and writes out coverage, methylation count, and percent methylation for each batch.
getting_regions_coverage <- function(cayo_meth,
                                     regions #,
                                     #at_least_X_coverage_of_a_region,
                                     #in_at_least_X_samples
                                     ){
  
  # cut the region list into 5 batches
  batch_list <- split(regions, cut(seq(nrow(regions)), breaks = 5, labels = FALSE))
  
  # get coverage and save each batch
  for(i in seq_along(batch_list)){
    
    regions_oi <- batch_list[[i]]
    
    coverage_regions_oi <- bsseq::getCoverage(cayo_meth, type = "Cov", regions = regions_oi,
                                              what="perRegionTotal", withDimnames = TRUE)
    
    rownames(coverage_regions_oi) <- regions_oi$RegionID
    
    # coverage_regions_oi <- coverage_regions_oi[rowSums(coverage_regions_oi >= at_least_X_coverage_of_a_region) >= in_at_least_X_samples, ]
    
    methylation_regions_oi <- bsseq::getCoverage(cayo_meth, type = "M", regions = regions_oi,
                                                 what="perRegionTotal", withDimnames = TRUE)
    
    rownames(methylation_regions_oi) <- regions_oi$RegionID
    
    # methylation_regions_oi <- methylation_regions_oi[rownames(methylation_regions_oi) %in% rownames(coverage_regions_oi),]
    
    # regions_oi <- regions_oi[regions_oi$RegionID %in% rownames(methylation_regions_oi),]
    
    perc_meth <- methylation_regions_oi / coverage_regions_oi
    
    return_ <- list(regions_oi, coverage_regions_oi, methylation_regions_oi, perc_meth)
    names(return_)=c("regions", "coverage", "methylation", "pmeth")
    
    write_rds(return_,file = paste0("/scratch/sbaptis7/Cayotissue_CpG_coverage/regions_batches/",gap_region,"/regions_batch_chr",unique(regions_oi$chr),"_batch",i,".rds"))
    
    # clean workspace for memory
    rm(regions_oi,coverage_regions_oi,methylation_regions_oi,perc_meth,return_)
  }
}
